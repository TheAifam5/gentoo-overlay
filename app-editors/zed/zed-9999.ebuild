# Copyright 2025 Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

# Autogenerated by pycargoebuild 0.13.5

EAPI=8

LLVM_COMPAT=( {18..19} )
RUST_MIN_VER="1.81.0"
RUST_NEEDS_LLVM=1
WEBRTC_VER="m114_release_patched"

MY_PV="${PV/_/-}"

inherit cargo check-reqs desktop flag-o-matic llvm-r1 toolchain-funcs xdg

DESCRIPTION="The fast, collaborative code editor"
HOMEPAGE="https://zed.dev https://github.com/zed-industries/zed"
if [[ "${PV}" == "9999" ]]; then
	inherit git-r3
	EGIT_REPO_URI="https://github.com/zed-industries/zed.git"
else
	SRC_URI="
		https://github.com/zed-industries/zed/archive/refs/tags/v${MY_PV}.tar.gz -> ${P}.tar.gz
		${CARGO_CRATE_URIS}
	"
	S="${WORKDIR}/${PN}-${MY_PV}"
	KEYWORDS="~amd64"
fi
SRC_URI+="
	amd64? (
		https://github.com/zed-industries/webrtc/releases/download/${WEBRTC_VER}/webrtc-linux-x64-release.zip
			-> webrtc-${WEBRTC_VER//_/-}-linux-x64-release.zip
	)
"
LICENSE="GPL-3+"
# Dependent crate licenses
LICENSE+="
	Apache-2.0 Apache-2.0-with-LLVM-exceptions BSD-2 BSD CC0-1.0 ISC
	LGPL-3 MIT MPL-2.0 Unicode-3.0 Unicode-DFS-2016 ZLIB
"
SLOT="0"
IUSE="X gles3"
CHECKREQS_DISK_BUILD="8G"
CHECKREQS_MEMORY="16G"

DEPEND="
	app-arch/zstd:=
	app-misc/jq
	dev-db/sqlite:3
	>=dev-libs/libgit2-1.9.0:=
	dev-libs/mimalloc
	dev-libs/openssl:0/3
	dev-libs/protobuf
	dev-libs/wayland
	dev-libs/wayland-protocols
	dev-util/wayland-scanner
	dev-util/vulkan-tools
	media-fonts/noto
	media-libs/alsa-lib
	media-libs/fontconfig
	media-libs/vulkan-loader[X?]
	net-analyzer/openbsd-netcat
	net-misc/curl
	sys-libs/zlib
	x11-libs/libxcb:=
	x11-libs/libxkbcommon[X?]
"
RDEPEND="${DEPEND}"
BDEPEND="
	app-arch/unzip
	dev-build/cmake
	dev-util/vulkan-headers
	sys-devel/gettext
	sys-devel/mold
	$(llvm_gen_dep '
		llvm-core/clang:${LLVM_SLOT}=
		llvm-core/llvm:${LLVM_SLOT}=
	')
"

pkg_setup() {
	if tc-is-gcc; then
		export CARGO_PROFILE_RELEASE_LTO="true"
	elif tc-is-clang; then
		export CARGO_PROFILE_RELEASE_LTO="thin"
	fi
	strip-unsupported-flags
	# flags from upstream
	export RUSTFLAGS="${RUSTFLAGS} -C symbol-mangling-version=v0 --cfg tokio_unstable -C link-arg=-fuse-ld=mold -C link-args=-Wl,--disable-new-dtags,-rpath,\$ORIGIN/../lib"
	# linking error with llvm-18
	export RUSTFLAGS="${RUSTFLAGS} -C link-args=-Wl,-z,nostart-stop-gc"
	if use gles3; then
		export RUSTFLAGS="${RUSTFLAGS} --cfg gles"
	fi
	llvm-r1_pkg_setup
	rust_pkg_setup
}

src_unpack() {
	default
	if [[ "${PV}" == "9999" ]]; then
		git-r3_src_unpack
		cargo_live_src_unpack
	else
		cargo_src_unpack
	fi
}

src_prepare() {
	default

	export RELEASE_CHANNEL="$(<crates/zed/RELEASE_CHANNEL)"

	export APP_CLI="zedit"
	export APP_ICON="zed"
	export APP_ARGS="%U"
	export DO_STARTUP_NOTIFY="true"

	if [[ "${RELEASE_CHANNEL}" == "preview" ]]; then
		export APP_NAME="Zed Preview"
	elif [[ "${RELEASE_CHANNEL}" == "nightly" ]]; then
		export APP_NAME="Zed Nightly"
	elif [[ "${RELEASE_CHANNEL}" == "dev" ]]; then
		export APP_NAME="Zed Devel"
	else
		export APP_NAME="Zed"
	fi

	envsubst < "crates/zed/resources/zed.desktop.in" > zed.desktop || die
}

src_configure() {
	cargo_src_configure --all-features
}

src_compile() {
	if [[ "${PV}" == "9999" ]]; then
		export RELEASE_VERSION="$(script/get-crate-version zed)"
	else
		export RELEASE_VERSION="${PV%_*}"
	fi
	export ZED_UPDATE_EXPLANATION='Updates are handled by portage'
	if use arm64; then
		export LK_CUSTOM_WEBRTC="${WORKDIR}/linux-arm64-release"
	elif use amd64; then
		export LK_CUSTOM_WEBRTC="${WORKDIR}/linux-x64-release"
	fi
	cargo_src_compile --package zed --package cli
}

src_install() {
	local suffix=""
	if [ "${RELEASE_CHANNEL}" != "stable" ]; then
		suffix="-${RELEASE_CHANNEL}"
	fi

	newbin $(cargo_target_dir)/cli ${APP_CLI}
	exeinto "/usr/libexec"
	newexe $(cargo_target_dir)/zed zed-editor

	newicon -s 512 crates/zed/resources/app-icon$suffix.png zed.png
	newicon -s 1024 crates/zed/resources/app-icon$suffix@2x.png zed.png
	domenu "${S}"/zed.desktop
}

src_test () {
	mkdir -p "${HOME}/.config/zed" || die
	mkdir -p "${HOME}/.local/share/zed/logs/" || die

	SHELL=/usr/bin/sh RUST_BACKTRACE=full cargo_src_test -vv
}
